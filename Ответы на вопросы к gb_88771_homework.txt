1. Как организовать клиент-серверное взаимодействие?
через сокеты, клиент инициализирует сеанс связи с сервером
если все ок, сервер отдает сокет в отдельный поток и продолжает слушать входящие соединения.
возможно стоит создать массив клиентских соединений,
который потом выдавать клиентам.
вопрос что делать при переполнении ))
2. Как и в каком виде передавать файлы?
передавать файлы в бинарном виде
прочитал на клиенте кусок файла в буфер, 
оформил в пакет на сервер в своем формате, скинул в сокет.
сервер прочитал - записал в файл, или не записал, вернул ошибку.
на каждый исходящий пакет от клиента сервер должен что-то отвечать.
ок или не ок, и текст ошибки.
пакет по идее должен выглядеть так:
1 слово (размерность "слова" стоит определить на практике) - тип команды

если команда - коннект
то 2 слово - длина имени пользователя
потом имя пользователя
потом длина хеша пароля
потом хеш пароля.

если команда - дисконнект
то 2 слово - длина имени пользователя
потом имя пользователя (возможно uid сессии, т. к. 1 пользак может войти несколько раз в свой акк).

если команда - передача файла
то 1 слово длина имени файла папки
потом идет имя файла / папки
потом длина хеша кусочка
потом хеш кусочка
потом длина куска
потом сам кусок байт

3. Как пересылать большие файлы?
Делить на настраиваемый размер пакета.
И кидать пакетами

4. Как пересылать служебные команды?
В типе пакета

5. Что хранить в базе данных?
Логин, пароль, хеш пароля, настройки клиента (длина пакета)

6. Как передавать структуру каталогов/файлов?
Сначала надо прочитать последовательно папку, спускаясь вниз по иерархии.
А потом последовательно передать на сервер.
При передаче папки файла указывать что это за тип файла и его относительный путь (относительно корня иерархии)

7. Какую библиотеку использовать для сетевого взаимодействия: java.io, java.nio, Netty?
Netty или nio, скорее всего. 
Тут еще не определился.